spring.application.name = r2sprjs
server.port=8080

#spring.http.converters.preferred-json-mapper=gson

#
# Logging level
#
logging.level.com.rdnsn=DEBUG
logging.level.io.r2dbc=debug
logging.level.org.springframework=DEBUG
logging.level.reactor.util.Loggers=DEBUG
# logging.level.root=debug


## REST Servlet
spring.data.rest.base-path=/api


# spring.datasource.url=jdbc:mysql://127.0.0.1:3306/r2db
spring.r2dbc.url=r2dbc:pool:mysql://127.0.0.1:3306/r2sprjs
spring.r2dbc.username=root
spring.r2dbc.password=
spring.r2dbc.initialization-mode=always


# spring.r2dbc.pool.initial-size=100
# spring.r2dbc.pool.max-size=500
# spring.r2dbc.pool.max-idle-time=30m
# spring.r2dbc.pool.validation-query=SELECT 1


spring.flyway.url=jdbc:mysql://127.0.0.1:3306/r2sprjs
spring.flyway.password=
spring.flyway.user=root
spring.flyway.baselineOnMigrate=true
spring.flyway.sql-migration-prefix=v
spring.flyway.locations=classpath:/db/migration,classpath:/dev/db/migration
# spring.flyway.baseline-version=1
spring.flyway.enabled=true
# spring.flyway.schemas=public
# spring.flyway.repeatable-sql-migration-prefix=R
spring.flyway.sql-migration-separator=_
spring.flyway.sql-migration-suffixes=.sql



### Abstracted ####
datasource.host=127.0.0.1
datasource.port=3306
datasource.database=r2sprjs
datasource.username=root
datasource.password=
###################


# spring.r2dbc.properties.lock_timeout = 40000
# spring.r2dbc.properties.statement_timeout = 40000
# spring.r2dbc.properties.idle_in_transaction_session_timeout = 40000
# spring.r2dbc.properties.connectTimeout = 40000

# r2dbc.migrate.resources-paths.classpath = /db/migration/*.sql

# not available in community edition
# spring.flyway.output-query-results=true




#  by setting spring.flyway.[url,user,password]
spring.r2dbc.driver=pool
spring.r2dbc.protocol=mysql

# spring.r2dbc.host=127.0.0.1
# spring.r2dbc.port=3306
# spring.r2dbc.user=root

# spring.datasource.username = root
# spring.datasource.password =


# .option(DRIVER, "pool")
#    .option(PROTOCOL, "postgresql") // driver identifier, PROTOCOL is delegated as DRIVER by the pool.
#    .option(HOST, "…")
#    .option(PORT, "…") 
#    .option(USER, "…")
#    .option(PASSWORD, "…")
#    .option(DATABASE, "…")


# driver	Must be pool
# protocol	Driver identifier. The value is propagated by the pool to the driver property.
# acquireRetry	Number of retries if the first connection acquiry attempt fails. Defaults to 1.
# initialSize	Initial pool size. Defaults to 10.
# maxSize	Maximum pool size. Defaults to 10.
# maxLifeTime	Maximum lifetime of the connection in the pool. Negative values indicate no timeout. Defaults to no timeout.
# maxIdleTime	Maximum idle time of the connection in the pool. Negative values indicate no timeout. Defaults to no timeout.
# maxAcquireTime	Maximum time to acquire connection from pool. Negative values indicate no timeout. Defaults to no timeout.
# maxCreateConnectionTime	Maximum time to create a new connection. Negative values indicate no timeout. Defaults to no timeout.
# poolName	Name of the Connection Pool.
# registerJmx	Whether to register the pool to JMX.
# validationDepth	Validation depth used to validate an R2DBC connection. Defaults to LOCAL.
# validationQuery	Query that will be executed just before a connection is given to you from the pool to validate that the connection to the database is still alive.



## How to confiure migration? Include Driver only as dev dependence!?
# flyway.url = jdbc:mysql://127.0.0.1:3306/r2sprjs
# # flyway.schemas = r2sprjs
# flyway.user = root
# flyway.password =


# spring.datasource.driverClassName = com.mysql.jdbc.Driver
# spring.datasource.url = jdbc:mysql://localhost:3306/USERSERVICE?autoreconnect=true
# spring.datasource.username = root
# spring.datasource.password =
# spring.datasource.testOnBorrow = true
# spring.datasource.testWhileIdle = true
# spring.datasource.timeBetweenEvictionRunsMillis = 60000
# spring.datasource.minEvictableIdleTimeMillis = 30000
# spring.datasource.validationQuery = SELECT 1
# spring.datasource.max-active = 15
# spring.datasource.max-idle = 10
# spring.datasource.max-wait = 8000





# spring-boot + jpa, use 'jdbcUrl'
# spring.datasource.jdbcUrl=jdbc:mysql://127.0.0.1:3306/r2db
# spring.jpa.hibernate.ddl-auto=create

# spring.datasource.username=root
# spring.datasource.password=

# spring-boot + mybatis, use 'url'
# spring.datasource.url=jdbc:mysql://127.0.0.1:3306/database

